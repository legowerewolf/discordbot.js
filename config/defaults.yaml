---
shortname: # This is the name that will be prefixed to logs from the bot.
APIKeys:
    discord: # This is the only value required to be in your configuration. Paste the key from the Discord API console here.
logLevel: 0 # The minimum log level that will be printed. 0 is info, 1 is warnings, 2 is errors.
defaultPermissionLevel: 0 # The bot has its own simple permission system, used to guard access to powerful commands. This sets every user's default.
users:
#   '[user's numerical id]': # enable dev mode, right click on a user, and select "Copy ID".
#       permissionLevel: 5 # A user's permission level must meet or exceed that of a command's permission level to execute that command.
intentsResolutionMethod: useDefault # Determines how intent configuration resolution will be handled. Available options are "useDefault" (uses only default intents), "useCustom" (uses only custom intents), "mergePreferDefault" (uses both default and custom, but chooses default in the event of a name collision), and "mergePreferCustom" (same as "mergePreferDefault", but chooses custom over defaults).
intents:
    greeting: # intent names must be unique in the config file
        models: # Models get fed to the natural language system to train it to interpret messages.
            - hello
            - hi
            - greetings
            - welcome
        handler: basic_response # Handler that picks a random response from the provided list.
        data:
            responses: # Provide responses to be randomly replied with for the provided models.
                - Hello!
                - Hi!
                - Greetings.
                - Aloha.
                - Salutations.
    goodnight:
        models:
            - goodnight
            - good night
            - buenos noches
        handler: basic_response
        data:
            responses:
                - Goodnight!
                - Have a good night!
                - See you tomorrow, I guess?
    capabilityQuery:
        models:
            - what can you do?
            - help
            - what can I say?
        handler: basic_response
        data:
            responses:
                - You can say "make a temporary channel" (or something similar), and I'll create a voice channel that
                  only exists as long as someone's in it. I also manage the replication of numbered voice channels
                  and roles assigned based on the game you're currently playing.
    declarationOfLove:
        models:
            - I love you
            - ily
        handler: basic_response
        data:
            responses:
                - Aww, I love you too!
                - \*blushes\* # You can use any of Discord's standard text formatting.
    ipFinder:
        handler: ip_finder
        permissionLevel: 5 # You must be previliged to know the bot's IP address.
        models:
            - where am I?
            - what is my IP address
    botShutdown:
        handler: bot_shutdown
        permissionLevel: 5
        models:
            - shut down
            - shutdown
            - go offline
            - exit
            - stop
        data:
            responses:
                - Ok. Goodbye!
                - I'll be back.
            handlerSpecific: # The responses field must always be an array of strings. The intentSpecific field allows for infinite variety, as needed by this specific handler.
                shutdownDelay: 3000
    temporaryVoiceChannel: # If no handler is specified, the bot tries to load a handler named the same as the intent.
        handler: temporary_voice_channel
        models:
            - make a temporary voice channel
            - create a channel
            - make a vc
            - make a temporary channel
            - make a channel
            - create a temporary channel
            - create a temporary voice channel
            - new channel
            - make a new channel
            - make a new channel please
            - new channel please
        data:
            questionData: # This handler asks the user a question to finish handling their request. (It's a limitation of natural.js that I can't get parameters from input.)
                question: # This is the question the user is asked. Multiple possibilities are encouraged.
                    - Alright, what do you want to name it?
                    - What do you want to call it?
                answeredResponse: # When the bot has the user's response, it replies with one of these.
                    - Alright, that's what I'll call it.
                    - And so it was named.
                    - Perfectly named. As all things should be.
                timeoutResponse: # If the user takes too long, it replies with one of these.
                    - Never mind. I'll pick a name.
                    - Alright. Guess I'll pick one.
                timeout: 10000 # How long to wait for a response.
                defaultResponses: # Acceptable default responses to the question, picked at random if the user takes too long.
                    - Death Metal
                    - Rainbows
                    - Unicorns
                    - Not Murder
                    - The End Times
                    - The Council of Elrond
                    - Generic channel name
                    - Stuck in Vim
                    - Fleet Command
            responses:
                - "Welcome to your new channel: "
                - "Here you go! Your new channel, fresh from the factory: "
            handlerSpecific:
                checkForMembersInterval: 5000 # How often to check if people are still in the voice channel
                bitrate: 16 # The default bitrate for newly created temporary voice channels.
    _unknown: # This intent is invoked when the bot has no goddamn clue what's going on.
        handler: basic_response
        data:
            responses:
                - I'm sorry, what was that?
                - I didn't understand. Could you rephrase that?
plugins: # Plugins add additional functionality. They don't currently each have any configuration options.
    - presence-roles # Creates and assigns roles to people while they are in-game, and deletes them afterwards. Created roles look like @in:[Name of game].
    - voice-scaling # For voice channels whose names end in a space-seperated number, E.G. "Hangouts 1", the bot will automatically create and destroy as many duplicate channels as needed for the number of people online. New channels will be auto-assigned to the lowest available number.
    - standard-handlers # Include the standard handlers (basic_response, ip_finder, and bot_shutdown)
    - temporary-voice-channels
